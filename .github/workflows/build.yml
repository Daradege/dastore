name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    container: docker://archlinux:base

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed base-devel git curl wget python python-pip gtk4 libadwaita python-gobject
          
          git clone https://aur.archlinux.org/paru.git
          cd paru
          makepkg -si --noconfirm
          cd .. && rm -rf paru

      - name: Download AppImage tools
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget https://github.com/linuxdeploy/linuxdeploy-plugin-gtk/releases/download/continuous/linuxdeploy-plugin-gtk-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage

      - name: Build AppImage
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps

          cp -r src/* AppDir/usr/bin/
          cp assets/dastore.png AppDir/usr/share/icons/hicolor/256x256/apps/

          cat > AppDir/dastore.desktop <<EOF
          [Desktop Entry]
          Type=Application
          Name=Dastore
          Comment=A graphical package manager for Arch Linux
          Exec=dastore
          Icon=dastore
          Categories=System;PackageManager;
          Terminal=false
          EOF
          cp AppDir/dastore.desktop AppDir/usr/share/applications/

          cat > AppDir/AppRun <<'EOF'
          #!/bin/sh
          HERE="$(dirname "$(readlink -f "${0}")")"
          export LD_LIBRARY_PATH="${HERE}/usr/lib:${HERE}/usr/lib/x86_64-linux-gnu:${LD_LIBRARY_PATH}"
          export XDG_DATA_DIRS="${HERE}/usr/share:${XDG_DATA_DIRS}"
          export PATH="${HERE}/usr/bin:${PATH}"
          export PYTHONPATH="${HERE}/usr/bin:${PYTHONPATH}"
          exec "${HERE}/usr/bin/main.py" "$@"
          EOF
          chmod +x AppDir/AppRun

          ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin gtk --output appimage --create-desktop-file --icon-file AppDir/usr/share/icons/hicolor/256x256/apps/dastore.png

      - name: Create install script
        run: |
          cat > install.sh <<'EOF'
          #!/bin/bash

          set -e

          echo "==> Dastore Installer"
          echo "==> Checking for Arch Linux..."
          if ! [ -f /etc/arch-release ]; then
              echo "This script is intended for Arch Linux based distributions only."
              exit 1
          fi
          echo "==> Arch Linux detected."

          echo "==> Installing dependencies..."
          sudo pacman -S --needed --noconfirm python python-gobject gtk4 libadwaita
          
          # Check if paru is installed, if not, install it
          if ! command -v paru &> /dev/null; then
              echo "==> Paru not found. Installing Paru..."
              sudo pacman -S --needed --noconfirm base-devel git
              git clone https://aur.archlinux.org/paru.git
              cd paru
              makepkg -si --noconfirm --asdeps
              cd ..
              rm -rf paru
          fi
          echo "==> Dependencies installed."

          INSTALL_DIR="/opt/dastore"
          echo "==> Installing Dastore to ${INSTALL_DIR}..."
          sudo mkdir -p ${INSTALL_DIR}
          sudo cp -r src/* ${INSTALL_DIR}/
          sudo cp assets/dastore.png ${INSTALL_DIR}/

          echo "==> Creating desktop entry..."
          sudo cat > /usr/share/applications/dastore.desktop <<EOL
          [Desktop Entry]
          Type=Application
          Name=Dastore
          Comment=A graphical package manager for Arch Linux
          Exec=${INSTALL_DIR}/main.py
          Icon=${INSTALL_DIR}/dastore.png
          Categories=System;PackageManager;
          Terminal=false
          EOL

          echo "==> Creating executable link in /usr/local/bin..."
          sudo ln -sf ${INSTALL_DIR}/main.py /usr/local/bin/dastore

          echo "==> Installation complete! You can now run 'dastore' from your terminal or find it in your app menu."
          EOF
          chmod +x install.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dastore-release-files
          path: |
            dastore*.AppImage
            install.sh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dastore*.AppImage
            install.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          